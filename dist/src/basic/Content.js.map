{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","children","style","containerStyle","flex","backgroundColor","disableKBDismissScroll","x","y","keyboardShouldPersistTaps","_scrollview","c","_root","padding","padder","variables","contentPadding","undefined","contentContainerStyle","PureComponent","contextTypes","theme","PropTypes","object","propTypes","oneOfType","number","array","StyledContent","mapPropsToStyleNames"],"mappings":"y1BACA,iEACA,qC,mDACA,4B,2CACA,yCACA,mGAEA,mE,yEACA,2C,q7BAEMA,Q,2RAKK,4BACqB,KAAKC,KAD1B,CACCC,QADD,QACCA,QADD,CACWC,KADX,QACWA,KADX,CAGP,GAAMC,gBAAiB,CACrBC,KAAM,CADe,CAErBC,gBAAiB,uBAASH,KAAT,EAAgBG,eAFZ,CAAvB,CASA,MACE,+BAAC,yBAAD,EAAc,MAAOF,cAArB,iDACE,8BAAC,2DAAD,WACE,iCAAkC,KADpC,CAEE,oBAAqBG,uBAAyB,IAAzB,CAAgC,CAAEC,EAAG,CAAL,CAAQC,EAAG,CAAX,CAFvD,CAGE,0BAA2BC,2BAA6B,SAH1D,CAIE,IAAK,eAAK,CACR,OAAKC,WAAL,CAAmBC,CAAnB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAPH,EAQM,KAAKX,KARX,EASE,sBAAuB,CACrB,CAAEa,QAASC,OAASC,UAAUC,cAAnB,CAAoCC,SAA/C,CADqB,CAErBC,qBAFqB,CATzB,kDAcGjB,QAdH,CADF,CADF,CAqBD,C,qBAtCmBkB,oB,EAAhBpB,O,CACGqB,Y,CAAe,CACpBC,MAAOC,oBAAUC,MADG,C,CAwCxBxB,QAAQyB,SAAR,CAAoB,CAIlBtB,MAAOoB,oBAAUG,SAAV,CAAoB,CACzBH,oBAAUC,MADe,CAEzBD,oBAAUI,MAFe,CAGzBJ,oBAAUK,KAHe,CAApB,CAJW,CAApB,CAWA,GAAMC,eAAgB,yCACpB,oBADoB,CAEpB,EAFoB,CAGpBC,8BAHoB,EAIpB9B,OAJoB,CAAtB,C,QAM0BA,O,CAAjB6B,a","file":"Content.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { SafeAreaView } from 'react-native';\nimport { KeyboardAwareScrollView } from '@codler/react-native-keyboard-aware-scroll-view';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport getStyle from '../utils/getStyle';\n\nclass Content extends PureComponent {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  render() {\n    const { children, style } = this.props;\n\n    const containerStyle = {\n      flex: 1,\n      backgroundColor: getStyle(style).backgroundColor\n    };\n\n    // const variables = this.context.theme\n    //   ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n    //   : variable;\n\n    return (\n      <SafeAreaView style={containerStyle}>\n        <KeyboardAwareScrollView\n          automaticallyAdjustContentInsets={false}\n          resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n          keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n          ref={c => {\n            this._scrollview = c;\n            this._root = c;\n          }}\n          {...this.props}\n          contentContainerStyle={[\n            { padding: padder ? variables.contentPadding : undefined },\n            contentContainerStyle\n          ]}\n        >\n          {children}\n        </KeyboardAwareScrollView>\n        {/* {children} */}\n      </SafeAreaView>\n    );\n  }\n}\n\nContent.propTypes = {\n  // disableKBDismissScroll: PropTypes.bool,\n  // keyboardShouldPersistTaps: PropTypes.string,\n  // padder: PropTypes.bool,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}